//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace API.SWIProlog.SWIPrologServiceTest.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SolutionVariable", Namespace="http://schemas.datacontract.org/2004/07/SWIPrologServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class SolutionVariable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Variable {
            get {
                return this.VariableField;
            }
            set {
                if ((object.ReferenceEquals(this.VariableField, value) != true)) {
                    this.VariableField = value;
                    this.RaisePropertyChanged("Variable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.ISWIPrologService")]
    public interface ISWIPrologService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISWIPrologService/Assert", ReplyAction="http://tempuri.org/ISWIPrologService/AssertResponse")]
        bool Assert(string clause);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISWIPrologService/ExecuteClause", ReplyAction="http://tempuri.org/ISWIPrologService/ExecuteClauseResponse")]
        bool ExecuteClause(string clause);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISWIPrologService/GetSolutionVariables", ReplyAction="http://tempuri.org/ISWIPrologService/GetSolutionVariablesResponse")]
        System.Collections.Generic.List<System.Collections.Generic.List<API.SWIProlog.SWIPrologServiceTest.ServiceReference2.SolutionVariable>> GetSolutionVariables(string query);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISWIPrologServiceChannel : API.SWIProlog.SWIPrologServiceTest.ServiceReference2.ISWIPrologService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SWIPrologServiceClient : System.ServiceModel.ClientBase<API.SWIProlog.SWIPrologServiceTest.ServiceReference2.ISWIPrologService>, API.SWIProlog.SWIPrologServiceTest.ServiceReference2.ISWIPrologService {
        
        public SWIPrologServiceClient() {
        }
        
        public SWIPrologServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SWIPrologServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SWIPrologServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SWIPrologServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Assert(string clause) {
            return base.Channel.Assert(clause);
        }
        
        public bool ExecuteClause(string clause) {
            return base.Channel.ExecuteClause(clause);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.List<API.SWIProlog.SWIPrologServiceTest.ServiceReference2.SolutionVariable>> GetSolutionVariables(string query) {
            return base.Channel.GetSolutionVariables(query);
        }
    }
}
