;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Clobber 
;;;     Created by Tom Flaherty (twf@apidev.com, blog at http://blog.apidev.com)
;;;     on 11/01/2013
;;;     From rules in book "Lessons In Play" by Albert, Nowakowski and Wolfe
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Components
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(role w)
(role b)

(<= (base (cell ?x ?y w)) (index_x ?x) (index_y ?y))
(<= (base (cell ?x ?y b)) (index_x ?x) (index_y ?y))
(<= (base (cell ?x ?y e)) (index_x ?x) (index_y ?y))
(base (control w))
(base (control b))

(<= (input ?p (move ?xo ?yo ?xn ?yn)) (role ?p) (index_x ?xo) (index_x ?xn) (index_y ?yo) (index_y ?yn))
(<= (input ?p noop) (role ?p))

(index_x 1)
(index_x 2)
(index_x 3)
(index_x 4)
(index_x 5)
(index_x 6)

(index_y 1)
(index_y 2)
(index_y 3)
(index_y 4)
(index_y 5)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; init
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(init (control w))

(init (cell 1 1 w))
(init (cell 1 2 b))
(init (cell 1 3 w))
(init (cell 1 4 b))
(init (cell 1 5 w))

(init (cell 2 1 b))
(init (cell 2 2 w))
(init (cell 2 3 b))
(init (cell 2 4 w))
(init (cell 2 5 b))

(init (cell 3 1 w))
(init (cell 3 2 b))
(init (cell 3 3 w))
(init (cell 3 4 b))
(init (cell 3 5 w))

(init (cell 4 1 b))
(init (cell 4 2 w))
(init (cell 4 3 b))
(init (cell 4 4 w))
(init (cell 4 5 b))

(init (cell 5 1 w))
(init (cell 5 2 b))
(init (cell 5 3 w))
(init (cell 5 4 b))
(init (cell 5 5 w))

(init (cell 6 1 b))
(init (cell 6 2 w))
(init (cell 6 3 b))
(init (cell 6 4 w))
(init (cell 6 5 b))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; legal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (legal ?p (move ?xo ?yo ?xn ?yn)) 
	(true (control ?p))
	(true (cell ?xo ?yo ?p))
	(adjacent ?xo ?yo ?xn ?yn)
	(role ?op)
	(distinct ?p ?op)
	(true (cell ?xn ?yn ?op)))

(<= (legal w noop)
	(true (control b)))

(<= (legal b noop)
	(true (control w)))
    

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; next
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (next (cell ?m ?n e))
	(true (cell ?m ?n e)))

(<= (next (cell ?xo ?yo e))
	(does ?p (move ?xo ?yo ?xn ?yn)))

(<= (next (cell ?xn ?yn ?p))
	(does ?p (move ?xo ?yo ?xn ?yn)))

(<= (next (cell ?x ?y ?p))
	(true (cell ?x ?y ?p))
	(does ?op (move ?xo ?yo ?xn ?yn))
	(or (distinct ?x ?xo) (distinct ?y ?yo))
	(or (distinct ?x ?xn) (distinct ?y ?yn)))

(<= (next (control w))
	(true (control b)))

(<= (next (control b))
	(true (control w)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; goal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (goal ?p 0)
	(control ?p)
	(not (hasAnyLegalMove ?p)))

(<= (goal ?p 100)
	(role ?p)
	(control ?op)
	(distinct ?p ?op)
	(not (hasAnyLegalMove ?op)))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; terminal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= terminal
	(control ?p)
	(not (hasAnyLegalMove ?p)))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; auxiliary predicates
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (hasAnyLegalMove ?p)
	(legal ?p (move ?xo ?yo ?xn ?yn)))

(<= (adjacent ?x1 ?y1 ?x2 ?y1)
	(index_y ?y1)
	(or (next_x ?x1 ?x2) (next_x ?x2 ?x1)))

(<= (adjacent ?x1 ?y1 ?x1 ?y2)
	(index_x ?x1)
	(or (next_y ?y1 ?y2) (next_y ?y2 ?y1)))

(<= (different_cell ?x1 ?y1 ?x1 ?y2)
	(index_x ?x1)
	(index_y ?y1)
	(index_y ?y2)
	(distinct ?y1 ?y2))

(<= (different_cell ?x1 ?y1 ?x2 ?y1)
	(index_y ?y1)
	(index_x ?x1)
	(index_x ?x2)
	(distinct ?x1 ?x2))

(<= (different_cell ?x1 ?y1 ?x2 ?y2)
	(index_x ?x1)
	(index_x ?x2)
	(index_y ?y1)
	(index_y ?y2)
	(distinct ?x1 ?x2)
	(distinct ?y1 ?y2))

(next_x 1 2)
(next_x 2 3)		
(next_x 3 4)	
(next_x 4 5)
(next_x 5 6)

(next_y 1 2)
(next_y 2 3)		
(next_y 3 4)	
(next_y 4 5)
